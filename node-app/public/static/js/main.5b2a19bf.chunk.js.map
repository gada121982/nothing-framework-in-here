{"version":3,"sources":["components/PrivateRoute.jsx","components/PublicRoute.jsx","router/ROUTERS.ts","pages/admin/menu/menu.tsx","pages/admin/pageHeader.tsx","fakeData/products.tsx","firebase/index.ts","components/openNotification.tsx","pages/admin/upload/UploadImage.tsx","pages/admin/users/usersForm.tsx","pages/admin/upload/UploadImageUpdate.tsx","pages/admin/users/usersFormUpdate.tsx","pages/admin/users/users.tsx","apis/shopAPIs.ts","pages/admin/products/productsForm.tsx","pages/admin/products/productsFormUpdate.tsx","pages/admin/products/products.tsx","pages/admin/category/categoryFormUpdate.tsx","pages/admin/category/categoryForm.tsx","pages/admin/category/category.tsx","pages/admin/feedback/feedback.tsx","pages/admin/orders/orders.tsx","pages/admin/voucher/voucherForm.tsx","pages/admin/voucher/voucherFormUpdate.tsx","pages/admin/voucher/voucher.tsx","pages/admin/admin.tsx","pages/auth/login.tsx","router/shop.tsx","App.tsx","serviceWorker.ts","redux/common.ts","redux/store.ts","index.tsx"],"names":["PrivateRoute","props","Component","component","rest","render","PublicRoute","localStorage","getItem","to","pathname","state","from","location","ROUTERS","MenuNav","Menu","SubMenu","history","useHistory","useLocation","useState","collapsed","style","overflow","height","position","left","width","background","type","onClick","toggleCollapsed","marginBottom","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","Item","key","icon","PieChartOutlined","push","IdcardOutlined","ShoppingCartOutlined","AppstoreOutlined","DesktopOutlined","WechatOutlined","LoginOutlined","removeItem","PageHeaderComp","title","ghost","onBack","window","back","fakeDataProduct","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","typeNotification","storage","UploadButton","PlusOutlined","marginTop","UploadImage","urlImage","fileList","setFileList","setUrlImages","onPreview","file","a","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","open","document","write","outerHTML","handleUploadImage","length","ref","name","put","on","snapshot","error","console","log","child","getDownloadURL","then","uid","status","listType","action","onChange","onRemove","Option","Select","UsersForm","Title","Typography","visible","setVisible","onClose","bodyStyle","paddingBottom","footer","textAlign","marginRight","layout","hideRequiredMark","gutter","level","span","label","rules","required","message","placeholder","value","TextArea","rows","UploadImageUpdate","handleUrlImage","imageUrl","useEffect","UsersFormUpdate","record","price","active","count","voucherId","categoryId","description","form","resetFields","Form","useForm","htmlType","id","onFinish","onFinishFailed","errorInfo","className","initialValues","defaultValue","EditableCell","editing","dataIndex","inputType","children","index","restProps","inputNode","margin","Users","map","item","toString","parseFloat","data","setEditingKey","confirmDelete","e","success","cancelDelete","columns","_","onConfirm","onCancel","okText","cancelText","href","color","paddingLeft","components","body","cell","bordered","dataSource","rowClassName","pagination","openNotification","notification","placement","API","token","ShopAPI","axios","create","baseURL","headers","Authorization","getProducts","reject","get","res","catch","err","ProductsForm","refetch","setImageUrl","values","voucher","describe","category","discount","post","AddProduct","ProductsFormUpdate","_id","isImageUrl","setIsImageUrl","UpdateProduct","Products","setData","products","idproducts","CategoryFormUpdate","CategoryForm","Category","FeedBack","Orders","VoucherForm","VoucherFormUpdate","Voucher","Content","Layout","Admin","setCollapsed","marginLeft","padding","path","Login","Shops","exact","App","Boolean","hostname","match","initialState","test","reducers","common","store","createStore","combineReducers","applyMiddleware","thunk","logger","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b2a19bf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst PrivateRoute = props => {\n    const { component: Component, ...rest } = props;\n\n    return (\n        <Route\n            {...rest}\n            render={\n                props => <Component {...props} />\n\n                // localStorage.getItem(\"user\") ? (\n                //   <Component {...props} />\n                // ) : (\n                //   <Redirect\n                //     to={{ pathname: \"/login\", state: { from: props.location } }}\n                //   />\n                // )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PublicRoute = props => {\n    const { component: Component, ...rest } = props;\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                !localStorage.getItem(\"user\") ? (\n                    <Component {...props} />\n                ) : (\n                        <Redirect\n                            to={{ pathname: \"/\", state: { from: props.location } }}\n                        />\n                    )\n            }\n        />\n    );\n};\n","export const ROUTERS = {\n    HOME: \"/\",\n    LOGIN: \"/login\",\n    ADMIN: \"/admin\",\n    DASHBOARD: \"/admin/dashboard\",\n    USERS: \"/admin/users\",\n    PRODUCTS: \"/admin/products\",\n    CATEGORY: \"/admin/category\",\n    VOUCHER: \"/admin/voucher\",\n    FEEDBACK: \"/admin/feedback\",\n    ORDERS: \"/admin/orders\",\n    GENERALBOOK: \"/admin/book/book-list\",\n    ADDBOOK: \"/admin/book/add-book\",\n};\n","import { Button, Menu } from 'antd';\nimport {\n  AppstoreOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  PieChartOutlined,\n  DesktopOutlined,\n  ContainerOutlined,\n  MailOutlined,\n  AppstoreAddOutlined,\n  WechatOutlined,\n  ShoppingCartOutlined,\n  IdcardOutlined,\n  CodeSandboxOutlined,\n  LoginOutlined,\n} from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport { ROUTERS } from '../../../router/ROUTERS';\n\nconst { SubMenu } = Menu;\n\ninterface props {\n  collapsed: boolean;\n  toggleCollapsed: () => void;\n}\n\nconst MenuNav = (props: any) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  const toggleCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <Layout>\n      <div\n        style={{\n          overflow: 'auto',\n          height: '100%',\n          position: 'fixed',\n          left: 0,\n          width: props.collapsed ? 48 : 256,\n          background: '#001529',\n        }}\n      >\n        <Button\n          type='primary'\n          onClick={props.toggleCollapsed}\n          style={{ marginBottom: 16 }}\n        >\n          {React.createElement(\n            props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined\n          )}\n        </Button>\n        <Menu\n          defaultSelectedKeys={\n            location.pathname === ROUTERS.ADMIN\n              ? ['1']\n              : location.pathname === ROUTERS.PRODUCTS\n              ? ['2']\n              : location.pathname === ROUTERS.USERS\n              ? ['3']\n              : location.pathname === ROUTERS.ORDERS\n              ? ['4']\n              : location.pathname === ROUTERS.CATEGORY\n              ? ['5']\n              : location.pathname === ROUTERS.VOUCHER\n              ? ['6']\n              : location.pathname === ROUTERS.FEEDBACK\n              ? ['7']\n              : ['1']\n          }\n          defaultOpenKeys={['sub1']}\n          mode='inline'\n          theme='dark'\n          inlineCollapsed={collapsed}\n        >\n          <Menu.Item\n            key='1'\n            icon={<PieChartOutlined />}\n            onClick={() => history.push(ROUTERS.ADMIN)}\n          >\n            Products\n          </Menu.Item>\n          <Menu.Item\n            key='3'\n            icon={<IdcardOutlined />}\n            onClick={() => history.push(ROUTERS.USERS)}\n          >\n            Users\n          </Menu.Item>\n          <Menu.Item\n            key='4'\n            icon={<ShoppingCartOutlined />}\n            onClick={() => history.push(ROUTERS.ORDERS)}\n          >\n            Orders\n          </Menu.Item>\n          <Menu.Item\n            key='5'\n            icon={<AppstoreOutlined />}\n            onClick={() => history.push(ROUTERS.CATEGORY)}\n          >\n            Category\n          </Menu.Item>\n          <Menu.Item\n            key='6'\n            icon={<DesktopOutlined />}\n            onClick={() => history.push(ROUTERS.VOUCHER)}\n          >\n            Voucher\n          </Menu.Item>\n          <Menu.Item\n            key='7'\n            icon={<WechatOutlined />}\n            onClick={() => history.push(ROUTERS.FEEDBACK)}\n          >\n            Feedback\n          </Menu.Item>\n          <Menu.Item\n            key='8'\n            icon={<LoginOutlined />}\n            onClick={() => {\n              localStorage.removeItem('token');\n              history.push(ROUTERS.HOME);\n            }}\n          >\n            LogOut\n          </Menu.Item>\n        </Menu>\n      </div>\n    </Layout>\n  );\n};\n\nexport default MenuNav;\n","import { PageHeader } from \"antd\";\nimport React from \"react\";\n\nfunction PageHeaderComp(props: any) {\n  const { title } = props;\n\n  return (\n    <div style={{ marginBottom: \"20px\" }}>\n      <PageHeader\n        ghost={false}\n        onBack={() => window.history.back()}\n        title={title}\n      ></PageHeader>\n    </div>\n  );\n}\n\nexport default PageHeaderComp;\n","\nconst fakeDataProduct = [{\n    \"key\": 1,\n    \"name\": \"Conroy, Welch and Lehner\",\n    \"price\": \"6532.60\",\n    \"active\": 1,\n    \"count\": 7,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"5cedc26f-b602-4c6c-81bb-e2446069dbbb\",\n    \"categoryId\": \"19939aa3-a996-4cf7-b3e7-d2155e53611c\",\n    \"description\": \"Fracture of angle of left mandible, subsequent encounter for fracture with delayed healing\"\n}, {\n    \"key\": 2,\n    \"name\": \"Farrell-Rath\",\n    \"price\": \"3229.50\",\n    \"active\": 0,\n    \"count\": 3,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"2e5bd8a6-caf0-4366-ae65-2c47de414e4c\",\n    \"categoryId\": \"ccef9ddd-9dfa-4191-84fd-b9de850d2cd1\",\n    \"description\": \"Traumatic amputation of forearm, level unspecified\"\n}, {\n    \"key\": 3,\n    \"name\": \"Effertz, McLaughlin and Botsford\",\n    \"price\": \"3702.52\",\n    \"active\": 1,\n    \"count\": 2,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"7bd19d11-4165-4491-9562-a2c486741e0a\",\n    \"categoryId\": \"857ee2cc-89c1-4010-bfc8-5ff62cb5fc62\",\n    \"description\": \"Unspecified motorcycle rider injured in collision with unspecified motor vehicles in traffic accident, subsequent encounter\"\n}, {\n    \"key\": 4,\n    \"name\": \"Mertz-Zemlak\",\n    \"price\": \"4363.96\",\n    \"active\": 0,\n    \"count\": 5,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"1b013972-90b2-4895-a89c-61b48150f84d\",\n    \"categoryId\": \"faff44f4-a927-41bf-9fe2-8f1f15fea92b\",\n    \"description\": \"Dislocation of unspecified cervical vertebrae, initial encounter\"\n}, {\n    \"key\": 5,\n    \"name\": \"Jakubowski, Kling and Collier\",\n    \"price\": \"7057.82\",\n    \"active\": 0,\n    \"count\": 9,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"22b003fc-2c47-4d28-9f60-7ca1d05f30c6\",\n    \"categoryId\": \"0ccf31a4-ae82-415d-b4eb-520ce2769c62\",\n    \"description\": \"Chronic multifocal osteomyelitis, right tibia and fibula\"\n}, {\n    \"key\": 6,\n    \"name\": \"Rutherford and Sons\",\n    \"price\": \"363.06\",\n    \"active\": 0,\n    \"count\": 3,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"298c189a-4dbd-463f-87d9-34255ee39d09\",\n    \"categoryId\": \"bf2f28ff-8928-4d29-ad0e-9529f7f33da4\",\n    \"description\": \"Toxic effect of hydrogen cyanide, assault, sequela\"\n}, {\n    \"key\": 7,\n    \"name\": \"Rath-Batz\",\n    \"price\": \"3926.01\",\n    \"active\": 1,\n    \"count\": 7,\n    \"image\": \"http://dummyimage.com/200x200.png/cc0000/ffffff\",\n    \"voucherId\": \"f7ae3c13-b2bd-455d-b426-9c9c2fdab354\",\n    \"categoryId\": \"3dcf56f2-6bbd-476e-bfee-4b5fb1abe5f3\",\n    \"description\": \"Vernal keratoconjunctivitis, with limbar and corneal involvement\"\n}, {\n    \"key\": 8,\n    \"name\": \"Schmidt Inc\",\n    \"price\": \"8216.40\",\n    \"active\": 0,\n    \"count\": 5,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"66d06463-dbed-4ae5-be55-47703866d98a\",\n    \"categoryId\": \"7c35bd79-dd79-4a26-8e7a-701d6015d307\",\n    \"description\": \"Gout due to renal impairment, wrist\"\n}, {\n    \"key\": 9,\n    \"name\": \"Kunde-Gaylord\",\n    \"price\": \"5715.18\",\n    \"active\": 0,\n    \"count\": 10,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"32b13fcf-c6bf-4aca-8e42-17c08fa01201\",\n    \"categoryId\": \"df736e2e-fdbe-4976-bf3d-aebd90c0f706\",\n    \"description\": \"Unspecified motorcycle rider injured in collision with pedestrian or animal in nontraffic accident, sequela\"\n}, {\n    \"key\": 10,\n    \"name\": \"Hickle-Toy\",\n    \"price\": \"9783.51\",\n    \"active\": 0,\n    \"count\": 8,\n    \"image\": \"http://dummyimage.com/200x200.png/cc0000/ffffff\",\n    \"voucherId\": \"58aa60eb-acfb-462b-92ec-d772572ceeb2\",\n    \"categoryId\": \"09384d88-9dbd-4ca9-b3e1-96c8cd5eb4e2\",\n    \"description\": \"Breakdown (mechanical) of internal fixation device of bones of hand and fingers\"\n}, {\n    \"key\": 11,\n    \"name\": \"Goodwin Inc\",\n    \"price\": \"8988.58\",\n    \"active\": 1,\n    \"count\": 2,\n    \"image\": \"http://dummyimage.com/200x200.png/dddddd/000000\",\n    \"voucherId\": \"51b9c176-bca0-4f7e-8ee4-9c5638056ea3\",\n    \"categoryId\": \"ffdff66c-bd75-4ca5-a76a-a5836f97a1df\",\n    \"description\": \"Car driver injured in noncollision transport accident in traffic accident, subsequent encounter\"\n}, {\n    \"key\": 12,\n    \"name\": \"Bednar, Strosin and Stanton\",\n    \"price\": \"5104.04\",\n    \"active\": 0,\n    \"count\": 6,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"f37477cb-7038-4dfe-bef3-d689602c9bd3\",\n    \"categoryId\": \"3c462f70-557a-428e-8ad5-f82fa223a3fc\",\n    \"description\": \"Obstructive and reflux uropathy\"\n}, {\n    \"key\": 13,\n    \"name\": \"Schoen, Torp and Thompson\",\n    \"price\": \"576.04\",\n    \"active\": 0,\n    \"count\": 9,\n    \"image\": \"http://dummyimage.com/200x200.png/dddddd/000000\",\n    \"voucherId\": \"5b5088f8-0a80-44e8-89c2-ba4fb49999a3\",\n    \"categoryId\": \"adbe09c3-7a83-4109-a9d2-e1820a37413e\",\n    \"description\": \"Explosion of bicycle tire, initial encounter\"\n}, {\n    \"key\": 14,\n    \"name\": \"Schultz-Romaguera\",\n    \"price\": \"8091.44\",\n    \"active\": 0,\n    \"count\": 9,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"8f290d49-0ba3-44cc-a787-04bb7f29e26c\",\n    \"categoryId\": \"0a919722-e7cb-4ea8-b8be-532263f07a29\",\n    \"description\": \"Fracture of unspecified parts of lumbosacral spine and pelvis\"\n}, {\n    \"key\": 15,\n    \"name\": \"Rodriguez and Sons\",\n    \"price\": \"8285.06\",\n    \"active\": 0,\n    \"count\": 2,\n    \"image\": \"http://dummyimage.com/200x200.png/dddddd/000000\",\n    \"voucherId\": \"7c696dea-7e14-42ab-8dda-38806e953c96\",\n    \"categoryId\": \"8c0806d1-0e0f-4213-849a-2da01a87c256\",\n    \"description\": \"Primary exertional headache\"\n}, {\n    \"key\": 16,\n    \"name\": \"Lang-Bechtelar\",\n    \"price\": \"5233.33\",\n    \"active\": 0,\n    \"count\": 7,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"873ed9af-0860-4a1f-a14c-f822b7c02519\",\n    \"categoryId\": \"b7408a2c-2f9d-46b5-9bc6-525aebec79cb\",\n    \"description\": \"Person boarding or alighting a three-wheeled motor vehicle injured in collision with railway train or railway vehicle, subsequent encounter\"\n}, {\n    \"key\": 17,\n    \"name\": \"Glover, Bauch and Lubowitz\",\n    \"price\": \"3663.78\",\n    \"active\": 1,\n    \"count\": 1,\n    \"image\": \"http://dummyimage.com/200x200.png/dddddd/000000\",\n    \"voucherId\": \"4cb0312c-5614-4a22-b1a4-3bc5635b2264\",\n    \"categoryId\": \"5ed773a5-61de-4a8a-8050-c7bee3f8b99e\",\n    \"description\": \"Unspecified complication of anesthesia during pregnancy\"\n}, {\n    \"key\": 18,\n    \"name\": \"Osinski LLC\",\n    \"price\": \"8668.71\",\n    \"active\": 0,\n    \"count\": 9,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"36302348-0191-4faf-8cd2-78e09da43730\",\n    \"categoryId\": \"cfdc80d2-c1f6-478a-bb64-77bb0a97ffd5\",\n    \"description\": \"Unspecified sprain of thumb\"\n}, {\n    \"key\": 19,\n    \"name\": \"Kihn, Bernhard and Feil\",\n    \"price\": \"9855.91\",\n    \"active\": 0,\n    \"count\": 8,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"881d18e7-a3d5-419f-abe6-2ead0aadc7ed\",\n    \"categoryId\": \"5d71875c-4839-416f-ac3e-effc5554e376\",\n    \"description\": \"Other abdominal hernia\"\n}, {\n    \"key\": 20,\n    \"name\": \"Gutkowski and Sons\",\n    \"price\": \"3392.14\",\n    \"active\": 1,\n    \"count\": 10,\n    \"image\": \"http://dummyimage.com/200x200.png/dddddd/000000\",\n    \"voucherId\": \"8211a7e3-5ff8-42ea-98c5-ef4e70a5d858\",\n    \"categoryId\": \"4370a412-3d53-4c7f-bfc0-f6694c4bfada\",\n    \"description\": \"Chronic giant papillary conjunctivitis, bilateral\"\n}, {\n    \"key\": 21,\n    \"name\": \"Bradtke, Strosin and Stark\",\n    \"price\": \"4475.78\",\n    \"active\": 1,\n    \"count\": 9,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"b431deca-d83c-4668-9f21-3ad33dc0a24b\",\n    \"categoryId\": \"0e126905-ebf0-4fe8-97bc-99a1d22867ef\",\n    \"description\": \"Anterior displaced fracture of sternal end of unspecified clavicle, subsequent encounter for fracture with delayed healing\"\n}, {\n    \"key\": 22,\n    \"name\": \"Hagenes Group\",\n    \"price\": \"7840.74\",\n    \"active\": 0,\n    \"count\": 10,\n    \"image\": \"http://dummyimage.com/200x200.png/dddddd/000000\",\n    \"voucherId\": \"618620f8-8732-4af7-ae1b-29e2602a81db\",\n    \"categoryId\": \"65f90fab-f419-4ecd-85eb-a4e23b61e765\",\n    \"description\": \"Spastic entropion of left lower eyelid\"\n}, {\n    \"key\": 23,\n    \"name\": \"McLaughlin-Von\",\n    \"price\": \"3375.50\",\n    \"active\": 0,\n    \"count\": 6,\n    \"image\": \"http://dummyimage.com/200x200.png/cc0000/ffffff\",\n    \"voucherId\": \"19387faa-43c8-4476-8498-7e5f948e49dd\",\n    \"categoryId\": \"f389f84d-da04-4c0c-94fc-68d628cbade8\",\n    \"description\": \"Pedestrian on foot injured in collision with other nonmotor vehicle in traffic accident, sequela\"\n}, {\n    \"key\": 24,\n    \"name\": \"Mann, Greenfelder and Konopelski\",\n    \"price\": \"4878.05\",\n    \"active\": 0,\n    \"count\": 4,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"5f7d6485-56ee-4f2f-85a8-7a18a75f03bb\",\n    \"categoryId\": \"0fcb2003-6a34-4426-96b3-b2df3b5f111c\",\n    \"description\": \"Displaced segmental fracture of shaft of right femur, subsequent encounter for open fracture type IIIA, IIIB, or IIIC with delayed healing\"\n}, {\n    \"key\": 25,\n    \"name\": \"Swaniawski, Emard and Rippin\",\n    \"price\": \"9519.38\",\n    \"active\": 0,\n    \"count\": 10,\n    \"image\": \"http://dummyimage.com/200x200.png/cc0000/ffffff\",\n    \"voucherId\": \"ad36b352-27c8-46e5-9ffb-26a4f24de3e1\",\n    \"categoryId\": \"d99c6553-afa1-4770-9ded-cd929468fe48\",\n    \"description\": \"Contusion of heart with hemopericardium, sequela\"\n}, {\n    \"key\": 26,\n    \"name\": \"Lebsack, O'Keefe and Stehr\",\n    \"price\": \"2665.53\",\n    \"active\": 0,\n    \"count\": 7,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"fbc914c5-1a95-4ad9-a0af-0d16975ed94b\",\n    \"categoryId\": \"791ffcbd-00b7-41b8-9db4-71382efd7ebb\",\n    \"description\": \"Unspecified injury of ascending [right] colon, subsequent encounter\"\n}, {\n    \"key\": 27,\n    \"name\": \"Wunsch LLC\",\n    \"price\": \"9129.02\",\n    \"active\": 1,\n    \"count\": 9,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"1b56c6a1-225b-4cf5-93d2-99d944509ac3\",\n    \"categoryId\": \"31819dea-93ad-43f3-a24b-a4ac8dc51d4f\",\n    \"description\": \"Unspecified inflammatory spondylopathy, lumbar region\"\n}, {\n    \"key\": 28,\n    \"name\": \"Rempel LLC\",\n    \"price\": \"1636.66\",\n    \"active\": 0,\n    \"count\": 6,\n    \"image\": \"http://dummyimage.com/200x200.png/cc0000/ffffff\",\n    \"voucherId\": \"5d7b86ab-aabf-4db7-8e09-b4069b4a5345\",\n    \"categoryId\": \"33919191-1c9a-4c27-940e-1fb06a73b3e3\",\n    \"description\": \"Fracture of orbital floor, left side, subsequent encounter for fracture with routine healing\"\n}, {\n    \"key\": 29,\n    \"name\": \"Morar-Thompson\",\n    \"price\": \"376.99\",\n    \"active\": 0,\n    \"count\": 7,\n    \"image\": \"http://dummyimage.com/200x200.png/ff4444/ffffff\",\n    \"voucherId\": \"97d9cce5-78e2-4db1-aed8-811c77f13a5c\",\n    \"categoryId\": \"ada8b329-9d12-45a5-8da2-d0968a24676f\",\n    \"description\": \"Behavioral insomnia of childhood, combined type\"\n}, {\n    \"key\": 30,\n    \"name\": \"Boehm, Blick and Langosh\",\n    \"price\": \"2678.29\",\n    \"active\": 0,\n    \"count\": 6,\n    \"image\": \"http://dummyimage.com/200x200.png/5fa2dd/ffffff\",\n    \"voucherId\": \"433812e1-bd4f-4fb6-bd6e-226e240d04f5\",\n    \"categoryId\": \"4488695d-9ace-4cde-9d88-bb77fcddcef5\",\n    \"description\": \"Corrosion of third degree of unspecified upper arm, initial encounter\"\n}]\n\nexport default fakeDataProduct;","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCxd4KkWb6oj6ymz3qxiUiBE-qQOW7MRH8\",\n    authDomain: \"shop-bf883.firebaseapp.com\",\n    databaseURL: \"https://shop-bf883.firebaseio.com\",\n    projectId: \"shop-bf883\",\n    storageBucket: \"shop-bf883.appspot.com\",\n    messagingSenderId: \"219180522237\",\n    appId: \"1:219180522237:web:203fd94b885538dfb2fc94\",\n    measurementId: \"G-VG1W118J7B\"\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nconst storage = firebase.storage();\n\nexport { storage, firebase as default };","import { notification } from 'antd';\nimport \"antd/dist/antd.css\";\n\nexport enum typeNotification {\n    success = \"success\",\n    info = \"info\",\n    warning = \"warning\",\n    error = \"error\",\n}\n\nconst openNotification = (type: typeNotification, description: string) => {\n    notification[type]({\n        message: 'Notification',\n        description: description,\n        placement: \"topRight\",\n    });\n};\n\nexport default openNotification;\n\n","import { Upload } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport { storage } from '../../../firebase';\n\nconst UploadButton = () => (\n  <div>\n    <PlusOutlined />\n    <div style={{ marginTop: 8 }}>Upload</div>\n  </div>\n);\n\nconst UploadImage = (props: any) => {\n  const { urlImage } = props;\n\n  const [fileList, setFileList] = useState<any>([]);\n  const [urlImages, setUrlImages] = useState<any>();\n\n  const onPreview = async (file: any) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow: any = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const handleUploadImage = async (file: any) => {\n    if (!file || !file.fileList || !file.fileList.length) {\n      setFileList([]);\n      return;\n    }\n    const {\n      file: { originFileObj },\n      fileList,\n    } = file;\n    // setFileList(fileList);\n\n    const uploadTask = storage\n      .ref(`images/${originFileObj.name}`)\n      .put(originFileObj);\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {},\n      (error) => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref('images')\n          .child(originFileObj.name)\n          .getDownloadURL()\n          .then((url) => {\n            setFileList([\n              {\n                uid: '-1',\n                name: 'image.png',\n                status: 'done',\n                url,\n              },\n            ]);\n            setUrlImages(url);\n            urlImage(url);\n          });\n      }\n    );\n  };\n\n  return (\n    <>\n      <Upload\n        listType='picture-card'\n        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n        fileList={fileList}\n        onPreview={onPreview}\n        onChange={handleUploadImage}\n        onRemove={() => {\n          setUrlImages('');\n        }}\n      >\n        {fileList.length < 1 && <UploadButton />}\n      </Upload>\n    </>\n  );\n};\n\nexport default UploadImage;\n","import { Drawer, Form, Button, Col, Row, Input, Select, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport UploadImage from '../upload/UploadImage';\n\nconst { Option } = Select;\n\nconst UsersForm = () => {\n\n    const { Title } = Typography;\n\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" onClick={showDrawer}>\n                <PlusOutlined /> Add User\n            </Button>\n            <Drawer\n                title=\"Create a User\"\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n              </Button>\n                        <Button onClick={onClose} type=\"primary\">\n                            Submit\n              </Button>\n                    </div>\n                }\n            >\n                <Form layout=\"vertical\" hideRequiredMark>\n                    <Row gutter={16} style={{ paddingBottom: 5 }}>\n                        <Col >\n                            <Title level={5}>Upload Image</Title>\n                            <UploadImage />\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Input placeholder=\"Please enter user name\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"price\"\n                                label=\"Price\"\n                                rules={[{ required: true, message: 'Please enter price' }]}\n                            >\n                                <Input placeholder=\"Please enter price\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"count\"\n                                label=\"Count\"\n                                rules={[{ required: true, message: 'Please enter count' }]}\n                            >\n                                <Input placeholder=\"Please enter count\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"active\"\n                                label=\"Active\"\n                                rules={[{ required: true, message: 'Please choose the active' }]}\n                            >\n                                <Select placeholder=\"Please choose the active\">\n                                    <Option value=\"private\">Private</Option>\n                                    <Option value=\"public\">Public</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"voucher\"\n                                label=\"Voucher\"\n                                rules={[{ required: true, message: 'Please choose the voucher' }]}\n                            >\n                                <Select placeholder=\"Please choose the voucher\">\n                                    <Option value=\"Voucher\">Voucher</Option>\n                                    <Option value=\"Voucher1\">Voucher1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"category\"\n                                label=\"Category\"\n                                rules={[{ required: true, message: 'Please choose the category' }]}\n                            >\n                                <Select placeholder=\"Please choose the category\">\n                                    <Option value=\"category\">Category</Option>\n                                    <Option value=\"category1\">Category</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Drawer>\n        </>\n    );\n}\n\n\nexport default UsersForm;","import { Button, Upload } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport { storage } from '../../../firebase';\n\nconst UploadButton = () => (\n  <div>\n    <PlusOutlined />\n    <div style={{ marginTop: 8 }}>Upload</div>\n  </div>\n);\n\nconst UploadImageUpdate = (props: any) => {\n  const { handleUrlImage, imageUrl } = props;\n\n  const [fileList, setFileList] = useState<any>([]);\n  const [urlImages, setUrlImages] = useState<any>();\n\n  useEffect(() => {\n    if (imageUrl) {\n      setFileList([\n        {\n          uid: '-1',\n          name: 'xxx.png',\n          status: 'done',\n          url: imageUrl,\n        },\n      ]);\n    }\n  }, []);\n\n  const onPreview = async (file: any) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow: any = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const handleUploadImage = async (file: any) => {\n    if (!file || !file.fileList || !file.fileList.length) {\n      setFileList([]);\n      return;\n    }\n    const {\n      file: { originFileObj },\n      fileList,\n    } = file;\n    // setFileList(fileList);\n\n    const uploadTask = storage\n      .ref(`images/${originFileObj.name}`)\n      .put(originFileObj);\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {},\n      (error) => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref('images')\n          .child(originFileObj.name)\n          .getDownloadURL()\n          .then((url) => {\n            setFileList([\n              {\n                uid: '-1',\n                name: 'image.png',\n                status: 'done',\n                url,\n              },\n            ]);\n            setUrlImages(url);\n            handleUrlImage(url);\n          });\n      }\n    );\n  };\n\n  return (\n    <>\n      <Upload\n        listType='picture-card'\n        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n        fileList={fileList}\n        onPreview={onPreview}\n        onChange={handleUploadImage}\n        onRemove={() => {\n          setUrlImages('');\n        }}\n      >\n        {fileList.length < 1 && <UploadButton />}\n      </Upload>\n    </>\n  );\n};\n\nexport default UploadImageUpdate;\n","import { Drawer, Form, Button, Col, Row, Input, Select, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport UploadImage from '../upload/UploadImage';\nimport UploadImageUpdate from '../upload/UploadImageUpdate';\n\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n};\n\n\nconst UsersFormUpdate = (props: any) => {\n\n    const { record } = props;\n    const { name, price, active, count, image, voucherId, categoryId, description } = record;\n\n    const { Title } = Typography;\n\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        form.resetFields();\n        setVisible(false);\n    };\n\n    const [form] = Form.useForm();\n\n    const onFinish = (value: any) => {\n        console.log(value, \"value\");\n\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(errorInfo);\n    };\n\n    return (\n        <>\n            <a onClick={showDrawer}> Edit</a>\n            <Drawer\n                title=\"Update a User\"\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n              </Button>\n                        <Button\n                            form='update-product'\n                            key='submit'\n                            htmlType='submit'\n                            type=\"primary\">\n                            Submit\n              </Button>\n                    </div>\n                }\n            >\n                <Form\n                    layout=\"vertical\"\n                    name='basic'\n                    id='update-product'\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    className='em_form'\n                    form={form}\n                    // {...layout}\n                    initialValues={{\n                        name: name ? name : '',\n                        price: price ? price : '',\n                        active: active ? active : '',\n                        count: count ? count : '',\n                        image: image ? image : '',\n                        voucherId: voucherId ? voucherId : '',\n                        categoryId: categoryId ? categoryId : '',\n                        description: description ? description : '',\n                    }}\n                >\n                    <Row gutter={16} style={{ paddingBottom: 5 }}>\n                        <Col >\n                            <Title level={5}>Upload Image</Title>\n                            <UploadImageUpdate image={image} />\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Input placeholder=\"Please enter user name\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"price\"\n                                label=\"Price\"\n                                rules={[{ required: true, message: 'Please enter price' }]}\n                            >\n                                <Input placeholder=\"Please enter price\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"count\"\n                                label=\"Count\"\n                                rules={[{ required: true, message: 'Please enter count' }]}\n                            >\n                                <Input placeholder=\"Please enter count\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"active\"\n                                label=\"Active\"\n                                rules={[{ required: true, message: 'Please choose the active' }]}\n                            >\n                                <Select placeholder=\"Please choose the active\" defaultValue={active}>\n                                    <Option value=\"private\">Private</Option>\n                                    <Option value=\"public\">Public</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"voucher\"\n                                label=\"Voucher\"\n                                rules={[{ required: true, message: 'Please choose the voucher' }]}\n                            >\n                                <Select placeholder=\"Please choose the voucher\" defaultValue={voucherId}>\n                                    <Option value=\"Voucher\">Voucher</Option>\n                                    <Option value=\"Voucher1\">Voucher1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"category\"\n                                label=\"Category\"\n                                rules={[{ required: true, message: 'Please choose the category' }]}\n                            >\n                                <Select placeholder=\"Please choose the category\" defaultValue={categoryId}>\n                                    <Option value=\"category\">Category</Option>\n                                    <Option value=\"category1\">Category1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Drawer>\n        </>\n    );\n}\n\n\nexport default UsersFormUpdate;","import React, { useState } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Image, message } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport PageHeaderComp from \"../pageHeader\";\nimport fakeDataProduct from \"../../../fakeData/products\";\nimport UsersForm from \"./usersForm\";\nimport UsersFormUpdate from \"./usersFormUpdate\";\n\ninterface Item {\n    key: string;\n    name: string;\n    price: number;\n    active: number;\n    count: number;\n    image: string;\n    voucherId: string;\n    categoryId: string;\n    description: string;\n}\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n    editing: boolean;\n    dataIndex: string;\n    title: any;\n    inputType: \"number\" | \"text\";\n    record: Item;\n    index: number;\n    children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n}) => {\n    const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{ margin: 0 }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                    children\n                )}\n        </td>\n    );\n};\n\nconst Users = () => {\n    const [form] = Form.useForm();\n    const [data, setData] = useState(fakeDataProduct.map((item) => {\n        return {\n            key: item.key.toString(),\n            name: item.name,\n            price: parseFloat(item.price),\n            active: item.active,\n            count: item.count,\n            image: item.image,\n            voucherId: item.voucherId,\n            categoryId: item.categoryId,\n            description: item.description,\n        }\n    }));\n    const [editingKey, setEditingKey] = useState(\"\");\n\n    const isEditing = (record: Item) => record.key === editingKey;\n\n    const cancel = () => {\n        setEditingKey(\"\");\n    };\n\n    function confirmDelete(e: any) {\n        console.log(e);\n        message.success('Click on Yes');\n    }\n\n    function cancelDelete(e: any) {\n        console.log(e);\n        message.error('Click on No');\n    }\n\n    const columns = [\n        {\n            title: \"name\",\n            dataIndex: \"name\",\n            width: \"10%\",\n        },\n        {\n            title: \"image\",\n            dataIndex: \"image\",\n            width: \"10%\",\n            render: (_: any, record: Item) => {\n                return (\n                    <Image\n                        // width={200}\n                        src={record.image}\n                    />\n                );\n            },\n        },\n        {\n            title: \"price\",\n            dataIndex: \"price\",\n            width: \"10%\",\n        },\n        {\n            title: \"active\",\n            dataIndex: \"active\",\n            width: \"10%\",\n        },\n        {\n            title: \"count\",\n            dataIndex: \"count\",\n            width: \"10%\",\n        },\n        {\n            title: \"voucherId\",\n            dataIndex: \"voucherId\",\n            width: \"10%\",\n        },\n        {\n            title: \"categoryId\",\n            dataIndex: \"categoryId\",\n            width: \"10%\",\n        },\n        {\n            title: \"description\",\n            dataIndex: \"description\",\n            width: \"15%\",\n        },\n        {\n            title: \"operation\",\n            dataIndex: \"operation\",\n            render: (_: any, record: Item) => {\n                return (\n                    <div>\n                        <UsersFormUpdate record={record} />\n                        <Popconfirm\n                            title=\"Are you sure delete this task?\"\n                            onConfirm={confirmDelete}\n                            onCancel={cancelDelete}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <a href=\"#\" style={{ color: \"red\", paddingLeft: \"10px\" }}>Delete</a>\n                        </Popconfirm>\n                    </div>\n                );\n            },\n        },\n    ];\n\n    const title = \"Users\";\n    return (\n        <>\n            <PageHeaderComp title={title}></PageHeaderComp>\n            <div>\n                <div\n                    className=\"add-book-btn\"\n                    style={{\n                        margin: \"20px auto\",\n                        textAlign: \"right\",\n                    }}\n                >\n                    <UsersForm />\n                </div>\n\n                <Form form={form} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        dataSource={data}\n                        columns={columns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            onChange: cancel,\n                        }}\n                    />\n                </Form>\n            </div>\n        </>\n    );\n};\n\nexport default Users;\n","import axios, { AxiosRequestConfig } from 'axios';\n\nexport const API = 'http://localhost:8000/';\n\nconst token = localStorage.getItem('token');\n\nconst ShopAPI = axios.create({\n  baseURL: `${API}`,\n  headers: { Authorization: `${token}` },\n});\n\nexport const registryUser = (\n  gmail: string,\n  password: string,\n  address: string,\n  phone: string\n) => {\n  return new Promise((resolve, reject) => {\n    ShopAPI.post(`${API}auth/registry`, {\n      gmail,\n      password,\n      address,\n      phone,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const Login = (username: string, password: string) => {\n  return new Promise((resolve, reject) => {\n    ShopAPI.post(`${API}auth/login`, {\n      username,\n      password,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getProducts = () => {\n  return new Promise((resolve, reject) => {\n    ShopAPI.get(`${API}product/all`)\n      .then((res) => {\n        if (res.status === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const AddProduct = (\n  token: string,\n  name: string,\n  price: number,\n  imageUrl: string,\n  count: number,\n  active: boolean,\n  voucherId: string,\n  describe: string,\n  categoryId: string,\n  discount: number\n) => {\n  return new Promise((resolve, reject) => {\n    ShopAPI.post(`${API}product/add`, {\n      token,\n      name,\n      price,\n      imageUrl,\n      count,\n      active,\n      voucherId,\n      describe,\n      categoryId,\n      discount,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const UpdateProduct = (\n  id: string,\n  name?: string,\n  price?: number,\n  imageUrl?: string,\n  count?: number,\n  active?: boolean,\n  voucherId?: string,\n  describe?: string,\n  categoryId?: string,\n  discount?: number\n) => {\n  return new Promise((resolve, reject) => {\n    ShopAPI.put(`${API}product`, {\n      id,\n      name,\n      price,\n      imageUrl,\n      count,\n      active,\n      voucherId,\n      describe,\n      categoryId,\n      discount,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const DeleteProduct = (idproducts: Array<string>) => {\n  return new Promise((resolve, reject) => {\n    ShopAPI.post(`${API}product/delete`, {\n      idproducts,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import {\n  Drawer,\n  Form,\n  Button,\n  Col,\n  Row,\n  Input,\n  Select,\n  Typography,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport UploadImage from '../upload/UploadImage';\nimport openNotification, {\n  typeNotification,\n} from '../../../components/openNotification';\nimport { AddProduct } from '../../../apis/shopAPIs';\n\nconst { Option } = Select;\n\nconst ProductsForm = (props: any) => {\n  const { refetch } = props;\n  const { Title } = Typography;\n\n  const [visible, setVisible] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n\n  const token: any = localStorage.getItem('token');\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const urlImage = (url: string) => {\n    if (!url) {\n      openNotification(typeNotification.error, 'Image error');\n      return;\n    }\n    setImageUrl(url);\n  };\n\n  const onFinish = (values: any) => {\n    const {\n      name,\n      price,\n      count,\n      active,\n      voucher: voucherId,\n      description: describe,\n      category: categoryId,\n      discount,\n    } = values;\n\n    AddProduct(\n      token,\n      name,\n      parseFloat(price),\n      imageUrl ? imageUrl : '',\n      parseFloat(count),\n      active === 'true' ? true : false,\n      voucherId,\n      describe,\n      categoryId,\n      parseFloat(discount)\n    )\n      .then((data: any) => {\n        console.log(data);\n\n        if (data.status === true) {\n          refetch();\n          openNotification(typeNotification.success, 'Add product success');\n        } else {\n          openNotification(typeNotification.error, 'Add product error');\n        }\n      })\n      .catch((err: any) => {\n        openNotification(typeNotification.error, err);\n      });\n  };\n\n  return (\n    <>\n      <Button type='primary' onClick={showDrawer}>\n        <PlusOutlined /> Add Product\n      </Button>\n      <Drawer\n        title='Create a Product'\n        width={720}\n        onClose={onClose}\n        visible={visible}\n        bodyStyle={{ paddingBottom: 80 }}\n        footer={\n          <div\n            style={{\n              textAlign: 'right',\n            }}\n          >\n            <Button onClick={onClose} style={{ marginRight: 8 }}>\n              Cancel\n            </Button>\n            <Button\n              // onClick={onClose}\n              type='primary'\n              htmlType='submit'\n              form='add-product'\n              key='submit'\n            >\n              Submit\n            </Button>\n          </div>\n        }\n      >\n        <Form\n          layout='vertical'\n          id='add-product'\n          hideRequiredMark\n          onFinish={onFinish}\n        >\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name='name'\n                label='Name'\n                rules={[{ required: true, message: 'Please enter user name' }]}\n              >\n                <Input placeholder='Please enter user name' />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name='price'\n                label='Price'\n                rules={[{ required: true, message: 'Please enter price' }]}\n              >\n                <Input type='number' placeholder='Please enter price' />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name='count'\n                label='Count'\n                rules={[{ required: true, message: 'Please enter count' }]}\n              >\n                <Input type='number' placeholder='Please enter count' />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name='active'\n                label='Active'\n                rules={[\n                  { required: true, message: 'Please choose the active' },\n                ]}\n              >\n                <Select placeholder='Please choose the active'>\n                  <Option value='false'>Private</Option>\n                  <Option value='true'>Public</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Title level={5}>Upload Image</Title>\n              <UploadImage urlImage={urlImage} />\n            </Col>\n            <Col span={12}>\n              <Form.Item name='voucher' label='Voucher'>\n                <Select placeholder='Please choose the voucher'>\n                  <Option value='Voucher'>Voucher</Option>\n                  <Option value='Voucher1'>Voucher1</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name='discount'\n                label='DisCount'\n                rules={[{ required: true, message: 'Please enter disCount' }]}\n              >\n                <Input type='number' placeholder='Please enter Count' />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name='category'\n                label='Category'\n                rules={[\n                  { required: true, message: 'Please choose the category' },\n                ]}\n              >\n                <Select placeholder='Please choose the category'>\n                  <Option value='category'>Category</Option>\n                  <Option value='category1'>Category</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={24}>\n              <Form.Item name='description' label='Description'>\n                <Input.TextArea\n                  rows={4}\n                  placeholder='please enter description'\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ProductsForm;\n","import {\n  Drawer,\n  Form,\n  Button,\n  Col,\n  Row,\n  Input,\n  Select,\n  Typography,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport UploadImage from '../upload/UploadImage';\nimport UploadImageUpdate from '../upload/UploadImageUpdate';\nimport openNotification, {\n  typeNotification,\n} from '../../../components/openNotification';\nimport { UpdateProduct } from '../../../apis/shopAPIs';\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nconst ProductsFormUpdate = (props: any) => {\n  const { record, refetch } = props;\n\n  console.log(props, 'props');\n  const {\n    _id: id,\n    name,\n    price,\n    active,\n    count,\n    imageUrl,\n    voucherId,\n    categoryId,\n    describe,\n    discount,\n  } = record;\n\n  const [isImageUrl, setIsImageUrl] = useState(imageUrl);\n\n  const { Title } = Typography;\n\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    form.resetFields();\n    setVisible(false);\n  };\n\n  const [form] = Form.useForm();\n\n  const onFinish = (values: any) => {\n    console.log(values, 'value');\n    const {\n      name,\n      price,\n      count,\n      active,\n      voucherId,\n      describe,\n      categoryId,\n      discount,\n    } = values;\n\n    UpdateProduct(\n      id,\n      name,\n      parseFloat(price),\n      isImageUrl ? isImageUrl : '',\n      parseFloat(count),\n      active === 'true' ? true : false,\n      voucherId,\n      describe,\n      categoryId,\n      parseFloat(discount)\n    )\n      .then((data: any) => {\n        if (data.status === true) {\n          refetch();\n          openNotification(typeNotification.success, 'Update product success');\n        } else {\n          openNotification(typeNotification.error, 'Update product error');\n        }\n      })\n      .catch((err: any) => {\n        openNotification(typeNotification.error, err.toString());\n      });\n  };\n\n  const handleUrlImage = (url: string) => {\n    if (!url) {\n      openNotification(typeNotification.error, 'Image error');\n      return;\n    }\n    setIsImageUrl(url);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(errorInfo);\n  };\n\n  return (\n    <>\n      <a onClick={showDrawer}> Edit</a>\n      <Drawer\n        title='Update a Product'\n        width={720}\n        onClose={onClose}\n        visible={visible}\n        bodyStyle={{ paddingBottom: 80 }}\n        footer={\n          <div\n            style={{\n              textAlign: 'right',\n            }}\n          >\n            <Button onClick={onClose} style={{ marginRight: 8 }}>\n              Cancel\n            </Button>\n            <Button\n              form='update-product'\n              key='submit'\n              htmlType='submit'\n              type='primary'\n            >\n              Submit\n            </Button>\n          </div>\n        }\n      >\n        <Form\n          layout='vertical'\n          name='basic'\n          id='update-product'\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          className='em_form'\n          form={form}\n          // {...layout}\n          initialValues={{\n            name: name ? name : '',\n            price: price ? price : '',\n            active: active ? `${active}` : '',\n            count: count ? count : '',\n            imageUrl: imageUrl ? imageUrl : '',\n            voucherId: voucherId ? `voucherId` : '',\n            categoryId: categoryId ? `categoryId` : '',\n            describe: describe ? describe : '',\n            discount: discount ? discount : '',\n          }}\n        >\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name='name'\n                label='Name'\n                rules={[{ required: true, message: 'Please enter user name' }]}\n              >\n                <Input placeholder='Please enter user name' />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name='price'\n                label='Price'\n                rules={[{ required: true, message: 'Please enter price' }]}\n              >\n                <Input type='number' placeholder='Please enter price' />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name='count'\n                label='Count'\n                rules={[{ required: true, message: 'Please enter count' }]}\n              >\n                <Input type='number' placeholder='Please enter count' />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name='active'\n                label='Active'\n                rules={[\n                  { required: true, message: 'Please choose the active' },\n                ]}\n              >\n                <Select placeholder='Please choose the active'>\n                  <Option value='false'>Private</Option>\n                  <Option value='true'>Public</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Title level={5}>Upload Image</Title>\n              <UploadImageUpdate\n                handleUrlImage={handleUrlImage}\n                imageUrl={imageUrl}\n              />\n            </Col>\n            <Col span={12}>\n              <Form.Item name='voucherId' label='Voucher'>\n                <Select placeholder='Please choose the voucher'>\n                  <Option value='voucherId'>{voucherId}</Option>\n                  <Option value='Voucher1'>Voucher1</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name='discount'\n                label='DisCount'\n                rules={[{ required: true, message: 'Please enter discount' }]}\n              >\n                <Input type='number' placeholder='Please enter discount' />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name='categoryId'\n                label='Category'\n                rules={[\n                  { required: true, message: 'Please choose the category' },\n                ]}\n              >\n                <Select placeholder='Please choose the category'>\n                  <Option value='categoryId'>{categoryId}</Option>\n                  <Option value='category1'>Category</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={24}>\n              <Form.Item name='describe' label='Describe'>\n                <Input.TextArea rows={4} placeholder='please enter describe' />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ProductsFormUpdate;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  Input,\n  InputNumber,\n  Popconfirm,\n  Form,\n  Button,\n  Image,\n  message,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PageHeaderComp from '../pageHeader';\nimport ProductsForm from './productsForm';\nimport ProductsFormUpdate from './productsFormUpdate';\nimport fakeDataProduct from '../../../fakeData/products';\nimport { DeleteProduct, getProducts } from '../../../apis/shopAPIs';\nimport { render } from '@testing-library/react';\nimport openNotification, {\n  typeNotification,\n} from '../../../components/openNotification';\n\ninterface Item {\n  key: string;\n  name: string;\n  price: number;\n  active: boolean;\n  count: number;\n  imageUrl: string;\n  voucherId: string;\n  categoryId: string;\n  describe: string;\n}\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n  editing: boolean;\n  dataIndex: string;\n  title: any;\n  inputType: 'number' | 'text';\n  record: Item;\n  index: number;\n  children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst Products = () => {\n  const [form] = Form.useForm();\n  const token: any = localStorage.getItem('token');\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getProducts().then((data: any) => {\n      setData(data?.products || []);\n    });\n  }, []);\n\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = (record: Item) => record.key === editingKey;\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  function confirmDelete(record: any) {\n    DeleteProduct([`${record._id}`])\n      .then(() => {\n        getProducts().then((data: any) => {\n          setData(data?.products || []);\n        });\n        openNotification(typeNotification.success, 'delete product success');\n      })\n      .catch((err) => {\n        openNotification(typeNotification.error, 'delete product error');\n      });\n  }\n\n  function cancelDelete(e: any) {}\n\n  const refetch = () => {\n    getProducts().then((data: any) => {\n      setData(data?.products || []);\n    });\n  };\n\n  const columns = [\n    {\n      title: 'name',\n      dataIndex: 'name',\n      width: '10%',\n    },\n    {\n      title: 'image',\n      dataIndex: 'imageUrl',\n      width: '10%',\n      render: (_: any, record: Item) => {\n        return (\n          <Image\n            // width={200}\n            src={record.imageUrl}\n          />\n        );\n      },\n    },\n    {\n      title: 'price',\n      dataIndex: 'price',\n      width: '10%',\n    },\n    {\n      title: 'active',\n      dataIndex: 'active',\n      width: '10%',\n      render: (_: any, record: Item) => {\n        return <p>{record ? 'Public' : 'Private'}</p>;\n      },\n    },\n    {\n      title: 'count',\n      dataIndex: 'count',\n      width: '10%',\n    },\n    {\n      title: 'voucherId',\n      dataIndex: 'voucherId',\n      width: '10%',\n    },\n    {\n      title: 'categoryId',\n      dataIndex: 'categoryId',\n      width: '10%',\n    },\n    {\n      title: 'describe',\n      dataIndex: 'describe',\n      width: '15%',\n    },\n    {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_: any, record: Item) => {\n        return (\n          <div>\n            {console.log(record, 'record')}\n            <ProductsFormUpdate record={record} refetch={refetch} />\n            <Popconfirm\n              title='Are you sure delete this task?'\n              onConfirm={() => confirmDelete(record)}\n              onCancel={cancelDelete}\n              okText='Yes'\n              cancelText='No'\n            >\n              <a href='#' style={{ color: 'red', paddingLeft: '10px' }}>\n                Delete\n              </a>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n\n  const title = 'Products';\n  return (\n    <>\n      <PageHeaderComp title={title}></PageHeaderComp>\n      <div>\n        <div\n          className='add-book-btn'\n          style={{\n            margin: '20px auto',\n            textAlign: 'right',\n          }}\n        >\n          <ProductsForm refetch={refetch} />\n        </div>\n\n        <Form form={form} component={false}>\n          <Table\n            components={{\n              body: {\n                cell: EditableCell,\n              },\n            }}\n            bordered\n            dataSource={data}\n            columns={columns}\n            rowClassName='editable-row'\n            pagination={{\n              onChange: cancel,\n            }}\n          />\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n","import { Drawer, Form, Button, Col, Row, Input, Select, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport UploadImage from '../upload/UploadImage';\nimport UploadImageUpdate from '../upload/UploadImageUpdate';\n\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n};\n\n\nconst CategoryFormUpdate = (props: any) => {\n\n    const { record } = props;\n    const { name, price, active, count, image, voucherId, categoryId, description } = record;\n\n    const { Title } = Typography;\n\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        form.resetFields();\n        setVisible(false);\n    };\n\n    const [form] = Form.useForm();\n\n    const onFinish = (value: any) => {\n        console.log(value, \"value\");\n\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(errorInfo);\n    };\n\n    return (\n        <>\n            <a onClick={showDrawer}> Edit</a>\n            <Drawer\n                title=\"Update a Category\"\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n              </Button>\n                        <Button\n                            form='update-product'\n                            key='submit'\n                            htmlType='submit'\n                            type=\"primary\">\n                            Submit\n              </Button>\n                    </div>\n                }\n            >\n                <Form\n                    layout=\"vertical\"\n                    name='basic'\n                    id='update-product'\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    className='em_form'\n                    form={form}\n                    // {...layout}\n                    initialValues={{\n                        name: name ? name : '',\n                        price: price ? price : '',\n                        active: active ? active : '',\n                        count: count ? count : '',\n                        image: image ? image : '',\n                        voucherId: voucherId ? voucherId : '',\n                        categoryId: categoryId ? categoryId : '',\n                        description: description ? description : '',\n                    }}\n                >\n                    <Row gutter={16} style={{ paddingBottom: 5 }}>\n                        <Col >\n                            <Title level={5}>Upload Image</Title>\n                            <UploadImageUpdate image={image} />\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Input placeholder=\"Please enter user name\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"price\"\n                                label=\"Price\"\n                                rules={[{ required: true, message: 'Please enter price' }]}\n                            >\n                                <Input placeholder=\"Please enter price\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"count\"\n                                label=\"Count\"\n                                rules={[{ required: true, message: 'Please enter count' }]}\n                            >\n                                <Input placeholder=\"Please enter count\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"active\"\n                                label=\"Active\"\n                                rules={[{ required: true, message: 'Please choose the active' }]}\n                            >\n                                <Select placeholder=\"Please choose the active\" defaultValue={active}>\n                                    <Option value=\"private\">Private</Option>\n                                    <Option value=\"public\">Public</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"voucher\"\n                                label=\"Voucher\"\n                                rules={[{ required: true, message: 'Please choose the voucher' }]}\n                            >\n                                <Select placeholder=\"Please choose the voucher\" defaultValue={voucherId}>\n                                    <Option value=\"Voucher\">Voucher</Option>\n                                    <Option value=\"Voucher1\">Voucher1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"category\"\n                                label=\"Category\"\n                                rules={[{ required: true, message: 'Please choose the category' }]}\n                            >\n                                <Select placeholder=\"Please choose the category\" defaultValue={categoryId}>\n                                    <Option value=\"category\">Category</Option>\n                                    <Option value=\"category1\">Category1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Drawer>\n        </>\n    );\n}\n\n\nexport default CategoryFormUpdate;","import { Drawer, Form, Button, Col, Row, Input, Select, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport UploadImage from '../upload/UploadImage';\n\nconst { Option } = Select;\n\nconst CategoryForm = () => {\n\n    const { Title } = Typography;\n\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" onClick={showDrawer}>\n                <PlusOutlined /> Add Category\n            </Button>\n            <Drawer\n                title=\"Create a Category\"\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n              </Button>\n                        <Button onClick={onClose} type=\"primary\">\n                            Submit\n              </Button>\n                    </div>\n                }\n            >\n                <Form layout=\"vertical\" hideRequiredMark>\n                    <Row gutter={16} style={{ paddingBottom: 5 }}>\n                        <Col >\n                            <Title level={5}>Upload Image</Title>\n                            <UploadImage />\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Input placeholder=\"Please enter user name\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"price\"\n                                label=\"Price\"\n                                rules={[{ required: true, message: 'Please enter price' }]}\n                            >\n                                <Input placeholder=\"Please enter price\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"count\"\n                                label=\"Count\"\n                                rules={[{ required: true, message: 'Please enter count' }]}\n                            >\n                                <Input placeholder=\"Please enter count\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"active\"\n                                label=\"Active\"\n                                rules={[{ required: true, message: 'Please choose the active' }]}\n                            >\n                                <Select placeholder=\"Please choose the active\">\n                                    <Option value=\"private\">Private</Option>\n                                    <Option value=\"public\">Public</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"voucher\"\n                                label=\"Voucher\"\n                                rules={[{ required: true, message: 'Please choose the voucher' }]}\n                            >\n                                <Select placeholder=\"Please choose the voucher\">\n                                    <Option value=\"Voucher\">Voucher</Option>\n                                    <Option value=\"Voucher1\">Voucher1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"category\"\n                                label=\"Category\"\n                                rules={[{ required: true, message: 'Please choose the category' }]}\n                            >\n                                <Select placeholder=\"Please choose the category\">\n                                    <Option value=\"category\">Category</Option>\n                                    <Option value=\"category1\">Category</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Drawer>\n        </>\n    );\n}\n\n\nexport default CategoryForm;","import React, { useState } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Image, message } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport PageHeaderComp from \"../pageHeader\";\nimport fakeDataProduct from \"../../../fakeData/products\";\nimport CategoryFormUpdate from \"./categoryFormUpdate\";\nimport CategoryForm from \"./categoryForm\";\n\ninterface Item {\n    key: string;\n    name: string;\n    price: number;\n    active: number;\n    count: number;\n    image: string;\n    voucherId: string;\n    categoryId: string;\n    description: string;\n}\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n    editing: boolean;\n    dataIndex: string;\n    title: any;\n    inputType: \"number\" | \"text\";\n    record: Item;\n    index: number;\n    children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n}) => {\n    const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{ margin: 0 }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                    children\n                )}\n        </td>\n    );\n};\n\nconst Category = () => {\n    const [form] = Form.useForm();\n    const [data, setData] = useState(fakeDataProduct.map((item) => {\n        return {\n            key: item.key.toString(),\n            name: item.name,\n            price: parseFloat(item.price),\n            active: item.active,\n            count: item.count,\n            image: item.image,\n            voucherId: item.voucherId,\n            categoryId: item.categoryId,\n            description: item.description,\n        }\n    }));\n    const [editingKey, setEditingKey] = useState(\"\");\n\n    const isEditing = (record: Item) => record.key === editingKey;\n\n    const cancel = () => {\n        setEditingKey(\"\");\n    };\n\n    function confirmDelete(e: any) {\n        console.log(e);\n        message.success('Click on Yes');\n    }\n\n    function cancelDelete(e: any) {\n        console.log(e);\n        message.error('Click on No');\n    }\n\n    const columns = [\n        {\n            title: \"name\",\n            dataIndex: \"name\",\n            width: \"10%\",\n        },\n        {\n            title: \"image\",\n            dataIndex: \"image\",\n            width: \"10%\",\n            render: (_: any, record: Item) => {\n                return (\n                    <Image\n                        // width={200}\n                        src={record.image}\n                    />\n                );\n            },\n        },\n        {\n            title: \"price\",\n            dataIndex: \"price\",\n            width: \"10%\",\n        },\n        {\n            title: \"active\",\n            dataIndex: \"active\",\n            width: \"10%\",\n        },\n        {\n            title: \"count\",\n            dataIndex: \"count\",\n            width: \"10%\",\n        },\n        {\n            title: \"voucherId\",\n            dataIndex: \"voucherId\",\n            width: \"10%\",\n        },\n        {\n            title: \"categoryId\",\n            dataIndex: \"categoryId\",\n            width: \"10%\",\n        },\n        {\n            title: \"description\",\n            dataIndex: \"description\",\n            width: \"15%\",\n        },\n        {\n            title: \"operation\",\n            dataIndex: \"operation\",\n            render: (_: any, record: Item) => {\n                return (\n                    <div>\n                        <CategoryFormUpdate record={record} />\n                        <Popconfirm\n                            title=\"Are you sure delete this task?\"\n                            onConfirm={confirmDelete}\n                            onCancel={cancelDelete}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <a href=\"#\" style={{ color: \"red\", paddingLeft: \"10px\" }}>Delete</a>\n                        </Popconfirm>\n                    </div>\n                );\n            },\n        },\n    ];\n\n    const title = \"Category\";\n    return (\n        <>\n            <PageHeaderComp title={title}></PageHeaderComp>\n            <div>\n                <div\n                    className=\"add-book-btn\"\n                    style={{\n                        margin: \"20px auto\",\n                        textAlign: \"right\",\n                    }}\n                >\n                    <CategoryForm />\n                </div>\n\n                <Form form={form} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        dataSource={data}\n                        columns={columns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            onChange: cancel,\n                        }}\n                    />\n                </Form>\n            </div>\n        </>\n    );\n};\n\nexport default Category;\n","import React, { useState } from 'react';\nimport { Table, Input, InputNumber, Form, Image } from 'antd';\nimport PageHeaderComp from '../pageHeader';\nimport fakeDataProduct from '../../../fakeData/products';\n\ninterface Item {\n  key: string;\n  name: string;\n  price: number;\n  active: number;\n  count: number;\n  image: string;\n  voucherId: string;\n  categoryId: string;\n  description: string;\n}\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n  editing: boolean;\n  dataIndex: string;\n  title: any;\n  inputType: 'number' | 'text';\n  record: Item;\n  index: number;\n  children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst FeedBack = () => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(\n    fakeDataProduct.map((item) => {\n      return {\n        key: item.key.toString(),\n        name: item.name,\n        price: parseFloat(item.price),\n        active: item.active,\n        count: item.count,\n        image: item.image,\n        voucherId: item.voucherId,\n        categoryId: item.categoryId,\n        description: item.description,\n      };\n    })\n  );\n\n  const columns = [\n    {\n      title: 'name',\n      dataIndex: 'name',\n      width: '10%',\n    },\n    {\n      title: 'image',\n      dataIndex: 'image',\n      width: '10%',\n      render: (_: any, record: Item) => {\n        return (\n          <Image\n            // width={200}\n            src={record.image}\n          />\n        );\n      },\n    },\n    {\n      title: 'price',\n      dataIndex: 'price',\n      width: '10%',\n    },\n    {\n      title: 'active',\n      dataIndex: 'active',\n      width: '10%',\n    },\n    {\n      title: 'count',\n      dataIndex: 'count',\n      width: '10%',\n    },\n    {\n      title: 'voucherId',\n      dataIndex: 'voucherId',\n      width: '10%',\n    },\n    {\n      title: 'categoryId',\n      dataIndex: 'categoryId',\n      width: '10%',\n    },\n    {\n      title: 'description',\n      dataIndex: 'description',\n      width: '15%',\n    },\n  ];\n\n  const title = 'FeedBack';\n  return (\n    <>\n      <PageHeaderComp title={title}></PageHeaderComp>\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          bordered\n          dataSource={data}\n          columns={columns}\n          rowClassName='editable-row'\n        />\n      </Form>\n    </>\n  );\n};\n\nexport default FeedBack;\n","import React, { useState } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Image, message, Select } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport PageHeaderComp from \"../pageHeader\";\nimport fakeDataProduct from \"../../../fakeData/products\";\n\ninterface Item {\n    key: string;\n    name: string;\n    price: number;\n    active: number;\n    count: number;\n    image: string;\n    voucherId: string;\n    categoryId: string;\n    description: string;\n}\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n    editing: boolean;\n    dataIndex: string;\n    title: any;\n    inputType: \"number\" | \"text\";\n    record: Item;\n    index: number;\n    children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n}) => {\n    const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{ margin: 0 }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                    children\n                )}\n        </td>\n    );\n};\n\nconst Orders = () => {\n    const [form] = Form.useForm();\n    const { Option } = Select;\n\n    const [data, setData] = useState(fakeDataProduct.map((item) => {\n        return {\n            key: item.key.toString(),\n            name: item.name,\n            price: parseFloat(item.price),\n            active: item.active,\n            count: item.count,\n            image: item.image,\n            voucherId: item.voucherId,\n            categoryId: item.categoryId,\n            description: item.description,\n        }\n    }));\n    const [editingKey, setEditingKey] = useState(\"\");\n\n    const isEditing = (record: Item) => record.key === editingKey;\n\n    const cancel = () => {\n        setEditingKey(\"\");\n    };\n\n    function confirmDelete(e: any) {\n        console.log(e);\n        message.success('Click on Yes');\n    }\n\n    function cancelDelete(e: any) {\n        console.log(e);\n        message.error('Click on No');\n    }\n\n    const columns = [\n        {\n            title: \"name\",\n            dataIndex: \"name\",\n            width: \"10%\",\n        },\n        {\n            title: \"image\",\n            dataIndex: \"image\",\n            width: \"10%\",\n            render: (_: any, record: Item) => {\n                return (\n                    <Image\n                        // width={200}\n                        src={record.image}\n                    />\n                );\n            },\n        },\n        {\n            title: \"price\",\n            dataIndex: \"price\",\n            width: \"10%\",\n        },\n        {\n            title: \"active\",\n            dataIndex: \"active\",\n            width: \"10%\",\n        },\n        {\n            title: \"count\",\n            dataIndex: \"count\",\n            width: \"10%\",\n        },\n        {\n            title: \"voucherId\",\n            dataIndex: \"voucherId\",\n            width: \"10%\",\n        },\n        {\n            title: \"categoryId\",\n            dataIndex: \"categoryId\",\n            width: \"10%\",\n        },\n        {\n            title: \"description\",\n            dataIndex: \"description\",\n            width: \"15%\",\n        },\n        {\n            title: \"status\",\n            dataIndex: \"status\",\n            render: (_: any, record: Item) => {\n                return (\n                    <Select placeholder=\"Please choose the status\">\n                        <Option value=\"pending\">Pending</Option>\n                        <Option value=\"confirm\">Comfirm</Option>\n                        <Option value=\"cancel\">Cancel</Option>\n                    </Select>\n                );\n            },\n        },\n    ];\n\n    const title = \"Orders\";\n    return (\n        <>\n            <PageHeaderComp title={title}></PageHeaderComp>\n            <div>\n                <div\n                    className=\"add-book-btn\"\n                    style={{\n                        margin: \"20px auto\",\n                        textAlign: \"right\",\n                    }}\n                >\n                </div>\n\n                <Form form={form} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        dataSource={data}\n                        columns={columns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            onChange: cancel,\n                        }}\n                    />\n                </Form>\n            </div>\n        </>\n    );\n};\n\nexport default Orders;\n","import { Drawer, Form, Button, Col, Row, Input, Select, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport UploadImage from '../upload/UploadImage';\n\nconst { Option } = Select;\n\nconst VoucherForm = () => {\n\n    const { Title } = Typography;\n\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" onClick={showDrawer}>\n                <PlusOutlined /> Add Voucher\n            </Button>\n            <Drawer\n                title=\"Create a Voucher\"\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n              </Button>\n                        <Button onClick={onClose} type=\"primary\">\n                            Submit\n              </Button>\n                    </div>\n                }\n            >\n                <Form layout=\"vertical\" hideRequiredMark>\n                    <Row gutter={16} style={{ paddingBottom: 5 }}>\n                        <Col >\n                            <Title level={5}>Upload Image</Title>\n                            <UploadImage />\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Input placeholder=\"Please enter user name\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"price\"\n                                label=\"Price\"\n                                rules={[{ required: true, message: 'Please enter price' }]}\n                            >\n                                <Input placeholder=\"Please enter price\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"count\"\n                                label=\"Count\"\n                                rules={[{ required: true, message: 'Please enter count' }]}\n                            >\n                                <Input placeholder=\"Please enter count\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"active\"\n                                label=\"Active\"\n                                rules={[{ required: true, message: 'Please choose the active' }]}\n                            >\n                                <Select placeholder=\"Please choose the active\">\n                                    <Option value=\"private\">Private</Option>\n                                    <Option value=\"public\">Public</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"voucher\"\n                                label=\"Voucher\"\n                                rules={[{ required: true, message: 'Please choose the voucher' }]}\n                            >\n                                <Select placeholder=\"Please choose the voucher\">\n                                    <Option value=\"Voucher\">Voucher</Option>\n                                    <Option value=\"Voucher1\">Voucher1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"category\"\n                                label=\"Category\"\n                                rules={[{ required: true, message: 'Please choose the category' }]}\n                            >\n                                <Select placeholder=\"Please choose the category\">\n                                    <Option value=\"category\">Category</Option>\n                                    <Option value=\"category1\">Category</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Drawer>\n        </>\n    );\n}\n\nexport default VoucherForm;","import { Drawer, Form, Button, Col, Row, Input, Select, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport UploadImageUpdate from '../upload/UploadImageUpdate';\n\nconst { Option } = Select;\n\nconst VoucherFormUpdate = (props: any) => {\n\n    const { record } = props;\n    const { name, price, active, count, image, voucherId, categoryId, description } = record;\n\n    const { Title } = Typography;\n\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        form.resetFields();\n        setVisible(false);\n    };\n\n    const [form] = Form.useForm();\n\n    const onFinish = (value: any) => {\n        console.log(value, \"value\");\n\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(errorInfo);\n    };\n\n    return (\n        <>\n            <a onClick={showDrawer}> Edit</a>\n            <Drawer\n                title=\"Update a Voucher\"\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n              </Button>\n                        <Button\n                            form='update-product'\n                            key='submit'\n                            htmlType='submit'\n                            type=\"primary\">\n                            Submit\n              </Button>\n                    </div>\n                }\n            >\n                <Form\n                    layout=\"vertical\"\n                    name='basic'\n                    id='update-product'\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    className='em_form'\n                    form={form}\n                    initialValues={{\n                        name: name ? name : '',\n                        price: price ? price : '',\n                        active: active ? active : '',\n                        count: count ? count : '',\n                        image: image ? image : '',\n                        voucherId: voucherId ? voucherId : '',\n                        categoryId: categoryId ? categoryId : '',\n                        description: description ? description : '',\n                    }}\n                >\n                    <Row gutter={16} style={{ paddingBottom: 5 }}>\n                        <Col >\n                            <Title level={5}>Upload Image</Title>\n                            <UploadImageUpdate image={image} />\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Input placeholder=\"Please enter user name\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"price\"\n                                label=\"Price\"\n                                rules={[{ required: true, message: 'Please enter price' }]}\n                            >\n                                <Input placeholder=\"Please enter price\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"count\"\n                                label=\"Count\"\n                                rules={[{ required: true, message: 'Please enter count' }]}\n                            >\n                                <Input placeholder=\"Please enter count\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"active\"\n                                label=\"Active\"\n                                rules={[{ required: true, message: 'Please choose the active' }]}\n                            >\n                                <Select placeholder=\"Please choose the active\" defaultValue={active}>\n                                    <Option value=\"private\">Private</Option>\n                                    <Option value=\"public\">Public</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"voucher\"\n                                label=\"Voucher\"\n                                rules={[{ required: true, message: 'Please choose the voucher' }]}\n                            >\n                                <Select placeholder=\"Please choose the voucher\" defaultValue={voucherId}>\n                                    <Option value=\"Voucher\">Voucher</Option>\n                                    <Option value=\"Voucher1\">Voucher1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"category\"\n                                label=\"Category\"\n                                rules={[{ required: true, message: 'Please choose the category' }]}\n                            >\n                                <Select placeholder=\"Please choose the category\" defaultValue={categoryId}>\n                                    <Option value=\"category\">Category</Option>\n                                    <Option value=\"category1\">Category1</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Drawer>\n        </>\n    );\n}\n\nexport default VoucherFormUpdate;","import React, { useState } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Image, message } from \"antd\";\nimport PageHeaderComp from \"../pageHeader\";\nimport fakeDataProduct from \"../../../fakeData/products\";\nimport VoucherForm from \"./voucherForm\";\nimport VoucherFormUpdate from \"./voucherFormUpdate\";\n\ninterface Item {\n    key: string;\n    name: string;\n    price: number;\n    active: number;\n    count: number;\n    image: string;\n    voucherId: string;\n    categoryId: string;\n    description: string;\n}\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n    editing: boolean;\n    dataIndex: string;\n    title: any;\n    inputType: \"number\" | \"text\";\n    record: Item;\n    index: number;\n    children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n}) => {\n    const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{ margin: 0 }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                    children\n                )}\n        </td>\n    );\n};\n\nconst Voucher = () => {\n    const [form] = Form.useForm();\n    const [data, setData] = useState(fakeDataProduct.map((item) => {\n        return {\n            key: item.key.toString(),\n            name: item.name,\n            price: parseFloat(item.price),\n            active: item.active,\n            count: item.count,\n            image: item.image,\n            voucherId: item.voucherId,\n            categoryId: item.categoryId,\n            description: item.description,\n        }\n    }));\n    const [editingKey, setEditingKey] = useState(\"\");\n\n    const isEditing = (record: Item) => record.key === editingKey;\n\n    const cancel = () => {\n        setEditingKey(\"\");\n    };\n\n    function confirmDelete(e: any) {\n        console.log(e);\n        message.success('Click on Yes');\n    }\n\n    function cancelDelete(e: any) {\n        console.log(e);\n        message.error('Click on No');\n    }\n\n    const columns = [\n        {\n            title: \"name\",\n            dataIndex: \"name\",\n            width: \"10%\",\n        },\n        {\n            title: \"image\",\n            dataIndex: \"image\",\n            width: \"10%\",\n            render: (_: any, record: Item) => {\n                return (\n                    <Image\n                        // width={200}\n                        src={record.image}\n                    />\n                );\n            },\n        },\n        {\n            title: \"price\",\n            dataIndex: \"price\",\n            width: \"10%\",\n        },\n        {\n            title: \"active\",\n            dataIndex: \"active\",\n            width: \"10%\",\n        },\n        {\n            title: \"count\",\n            dataIndex: \"count\",\n            width: \"10%\",\n        },\n        {\n            title: \"voucherId\",\n            dataIndex: \"voucherId\",\n            width: \"10%\",\n        },\n        {\n            title: \"categoryId\",\n            dataIndex: \"categoryId\",\n            width: \"10%\",\n        },\n        {\n            title: \"description\",\n            dataIndex: \"description\",\n            width: \"15%\",\n        },\n        {\n            title: \"operation\",\n            dataIndex: \"operation\",\n            render: (_: any, record: Item) => {\n                return (\n                    <div>\n                        <VoucherFormUpdate record={record} />\n                        <Popconfirm\n                            title=\"Are you sure delete this task?\"\n                            onConfirm={confirmDelete}\n                            onCancel={cancelDelete}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <a href=\"#\" style={{ color: \"red\", paddingLeft: \"10px\" }}>Delete</a>\n                        </Popconfirm>\n                    </div>\n                );\n            },\n        },\n    ];\n\n    const title = \"Voucher\";\n    return (\n        <>\n            <PageHeaderComp title={title}></PageHeaderComp>\n            <div>\n                <div\n                    className=\"add-book-btn\"\n                    style={{\n                        margin: \"20px auto\",\n                        textAlign: \"right\",\n                    }}\n                >\n                    <VoucherForm />\n                </div>\n\n                <Form form={form} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        dataSource={data}\n                        columns={columns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            onChange: cancel,\n                        }}\n                    />\n                </Form>\n            </div>\n        </>\n    );\n};\n\nexport default Voucher;\n","import React, { useState } from 'react';\nimport MenuNav from './menu/menu';\nimport { Redirect, Route, Router, Switch, useLocation } from 'react-router-dom';\nimport Users from './users/users';\n\nimport { Layout } from 'antd';\nimport { ROUTERS } from '../../router/ROUTERS';\nimport Products from './products/products';\nimport Category from './category/category';\nimport FeedBack from './feedback/feedback';\nimport Orders from './orders/orders';\nimport Voucher from './voucher/voucher';\nimport Dashboard from './dashboard/dashborad';\n\nconst { Content } = Layout;\n\nconst Admin = () => {\n  const location = useLocation<any>();\n  const [collapsed, setCollapsed] = useState(false);\n\n  const toggleCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <Layout>\n      <MenuNav collapsed={collapsed} toggleCollapsed={toggleCollapsed} />\n      <Content\n        style={{\n          overflow: 'initial',\n          marginLeft: collapsed ? '60px' : '256px',\n          textAlign: 'left',\n          padding: '20px',\n        }}\n      >\n        <Products />\n        <Switch>\n          <Route path={ROUTERS.USERS} component={Users} />\n          <Route path={ROUTERS.ORDERS} component={Orders} />\n          <Route path={ROUTERS.CATEGORY} component={Category} />\n          <Route path={ROUTERS.VOUCHER} component={Voucher} />\n          <Route path={ROUTERS.FEEDBACK} component={FeedBack} />\n        </Switch>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Admin;\n","import React from \"react\";\n\nexport const Login = () => {\n    return <div title=\"OK\"><p>TEST ROUTER</p></div>;\n};\n","import React from \"react\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport PrivateRoute from \"../components/PrivateRoute\";\nimport { PublicRoute } from \"../components/PublicRoute\";\nimport Admin from \"../pages/admin/admin\";\nimport { Login } from \"../pages/auth/login\";\nimport { Home } from \"../pages/home/home\";\nimport { ROUTERS } from \"./ROUTERS\";\n\nexport const Shops = () => {\n    return (\n        <BrowserRouter>\n            <PrivateRoute exact path={ROUTERS.HOME} component={Admin} />\n            <PublicRoute exact path={ROUTERS.ADMIN} component={Admin} />\n            <PublicRoute exact path={ROUTERS.PRODUCTS} component={Admin} />\n            <PublicRoute exact path={ROUTERS.USERS} component={Admin} />\n            <PublicRoute exact path={ROUTERS.ORDERS} component={Admin} />\n            <PublicRoute exact path={ROUTERS.CATEGORY} component={Admin} />\n            <PublicRoute exact path={ROUTERS.VOUCHER} component={Admin} />\n            <PublicRoute exact path={ROUTERS.FEEDBACK} component={Admin} />\n            <PublicRoute exact path={ROUTERS.GENERALBOOK} component={Admin} />\n            <PublicRoute exact path={ROUTERS.ADDBOOK} component={Admin} />\n            <PublicRoute exact path={ROUTERS.LOGIN} component={Login} />\n        </BrowserRouter>\n    );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Shops } from \"./router/shop\";\nfunction App() {\n  return <Shops />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as shopAPIs from \"../apis/shopAPIs\";\n\nconst SET_TEST_REDUX = \"SET_TEST_REDUX\";\n\nexport const setTestRedux = (test: boolean) => (dispatch: any) => {\n    dispatch({ type: SET_TEST_REDUX, test });\n};\n\nconst initialState: any = {\n    test: false\n};\n\nexport default function CommonReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case SET_TEST_REDUX:\n            return {\n                ...state,\n                test: action.test\n            };\n        default:\n            return state;\n    }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport common from \"./common\";\n\nconst reducers = {\n    common\n};\n\nconst store = createStore(\n    combineReducers(reducers),\n    applyMiddleware(thunk, logger)\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}><App /></Provider>\n    , document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}